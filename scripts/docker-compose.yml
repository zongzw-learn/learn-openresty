version: "3"
services:
  openresty:
    image: openresty/openresty:latest
    container_name: OPENRESTY
    links:
      - redis:redis-server
    ports:
      - 80:80
    volumes:
      - ${HOMEDIR}/conf.d/openresty/nginx-server.conf:/etc/nginx/conf.d/default.conf
      - ${HOMEDIR}/conf.d/openresty/nginx-http.conf:/usr/local/openresty/nginx/conf/nginx.conf
    networks:
      restynet:
        ipv4_address: 172.245.18.2

  redis:
    image: redis:latest
    container_name: REDIS
    ports:
      - 6379:6379
    networks:
      restynet:
        ipv4_address: 172.245.18.3

  nginx:
    image: nginx:latest
    container_name: NGINX
    ports:
     - 81:80
    volumes:
     - ${HOMEDIR}/conf.d/nginx/nginx.conf:/etc/nginx/nginx.conf
     - ${HOMEDIR}/conf.d/nginx/js-modules:/etc/nginx/js-modules
    networks:
      restynet:
        ipv4_address: 172.245.18.4

  # only for test.
  # centos:
  #   image: centos:7
  #   container_name: CENTOS
  #   links:
  #     - redis:redis-server
  #     - openresty:nginx-server
  #     - nginx:nginx-server
  #   command:
  #     - bash
  #     - -c
  #     - "while true; do sleep 1; done"
  #   networks:
  #     restynet:
  #       ipv4_address: 172.245.18.5

# optional network setting, links seems more suitable in experienced cases.
networks:
  restynet:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.245.18.0/24


