

# lua_package_path ""

server {
    listen       80;
    server_name  localhost;

    location /echo {

        echo_sleep 2;
        echo "$echo_timer_elapsed sec elapsed.";
        echo_reset_timer;

        echo_sleep 3;
        echo "$echo_timer_elapsed sec elapsed.";
    }

    location /proxy {
        resolver 8.8.8.8;
        proxy_pass $arg_go/;
    }

    location /sum {
        default_type text/html;

        resolver 127.0.0.11; # to resolve redis-server 

        content_by_lua_block {
            ngx.req.read_body()
            local data = ngx.req.get_body_data()
            ngx.say("request: ")
            ngx.say("- content-type: " .. ngx.var.content_type)
            ngx.say("- request_time: " .. ngx.var.date_gmt)
            ngx.say("- data: " .. data)

            local redis = require "resty.redis"
            local red = redis:new()
            red:set_timeouts(1000, 1000, 1000)

            local ok, err = red:connect("redis-server", 6379)
            if not ok then 
                ngx.say("failed to connect: ", err)
                return
            end
            
            ok, err = red:hset("myhash", ngx.var.date_gmt, data)
            if not ok then 
                ngx.say("failed to set " .. ngx.var.date_gmt .. data)
                return
            end

            ngx.say("\nHistory: ")

            local kvs = red:hgetall("myhash")

            for i,v in ipairs(kvs) do  ngx.say(v) end

            red:close()
        }
    }

    location /args {
        array_split ',' $arg_names to=$array;
        echo $arg_names;
        array_join '|' $array to=$or_array;
        echo "$or_array";
    }

    location /random {
        default_type text/html;

        content_by_lua_block {
            ngx.say("<p>hello, world</p>")

            math.randomseed(os.time())
            local a = math.random()
            
            ngx.say("random number: " .. a .. "\n")
        }
    }

    # error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }
}
